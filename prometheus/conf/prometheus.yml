# 全局配置
global:
  # 设置全局的抓取间隔时间，即 Prometheus 从目标抓取数据的频率。
  scrape_interval: 15s
  # 设置全局的评估间隔时间，即 Prometheus 评估告警规则和记录规则的频率。
  evaluation_interval: 15s
  # 设置全局的抓取超时时间，即 Prometheus 在放弃请求之前等待响应的时间。
  scrape_timeout: 10s

# 告警配置
alerting:
  # 配置告警管理器的地址，Prometheus 会将告警发送到这些地址。
  alertmanagers:
    - static_configs:
        - targets: ['10.1.10.101:9093']

# 规则文件配置
rule_files:
  # 指定规则文件的路径，Prometheus 会加载这些文件中的规则。
  - "/etc/prometheus/rules.yml"

# 抓取配置
scrape_configs:
  # 抓取 Prometheus 自身的指标
  - job_name: 'prometheus'
    static_configs:
      - targets: ['10.1.10.101:9090']

  # 抓取 cAdvisor 的指标
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['10.1.10.101:8899']

  # 抓取 Node Exporter 的指标
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['10.1.10.101:9100']
        labels:
          # 为节点添加实例和服务标签，便于区分不同节点和服务
          instance: vm-10.1.10.101
          service: node-service

  # 抓取应用程序的指标
  - job_name: 'app'
    # 设置应用程序的抓取间隔时间，可以比默认的 15s 更短
    scrape_interval: 5s
    # 设置应用程序的抓取路径
    metrics_path: '/lxcheck/prometheus'
    static_configs:
      - targets: ['10.1.10.101:10086']

# 动态服务发现配置（可选）
# 以下配置用于动态发现目标，避免静态配置带来的重启中断问题
# Node_Exporter
# - job_name: 'node-exporter'
#   file_sd_configs:
#     - files: ['./conf/groups/nodegroups/*.json']
#   # 使用文件服务发现时，可以动态添加和删除目标，而无需重启 Prometheus
#   # 文件路径 './conf/groups/nodegroups/*.json' 是一个示例路径，实际路径需要根据实际情况修改
#   # 文件内容示例如下：
#   # [
#   #   {
#   #     "targets": ["10.1.10.101:9100"],
#   #     "labels": {
#   #       "instance": "vm-10.1.10.101",
#   #       "service": "node-service"
#   #     }
#   #   }
#   # ]