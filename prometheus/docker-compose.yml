services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    hostname: prometheus
    environment:
      - TZ=Asia/Shanghai
    ports:
      - 8090:9090
    volumes:
      - ./conf/:/etc/prometheus/
      - ./data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries' 
      - '--web.console.templates=/usr/share/prometheus/consoles' 
      - '--storage.tsdb.retention.time=15d'
# 设置web.external-url，添加数据源时http://localhost:8090/prometheus
      - '--web.external-url=http://localhost:8090/prometheus'
    networks:
      - monitor
  alertmanager:
   image: prom/alertmanager
   container_name: alertmanager
   hostname: prometheus
   restart: always
   ports:
     - 9093:9093
   volumes:
     - ./conf/alertmanager/:/etc/alertmanager/
     - ./data/alertmanager:/alertmanager
   command:
     - '--config.file=/etc/alertmanager/alertmanager.yml'
     - '--storage.path=/alertmanager'
   environment:
     - TZ=Asia/Shanghai
   networks:
      - monitor
  grafana:
   image: grafana/grafana
   container_name: grafana
   hostname: grafana
   restart: always
   ports:
     - 3000:3000
   volumes:
#     - ./conf/grafana/:/etc/grafana/provisioning/
     - ./data/grafana:/var/lib/grafana
   environment:
     - TZ=Asia/Shanghai
     - GF_INSTALL_PLUGINS=camptocamp-prometheus-alertmanager-datasource
   networks:
      - monitor
  node-exporter:
    image: quay.io/prometheus/node-exporter
    container_name: node-exporter
    hostname: node-exporter
    restart: always
    ports:
      - 9100:9100
    environment:
      - TZ=Asia/Shanghai
    networks:
      - monitor
# docker容器性能监控 893  http://localhost:8899/containers/    
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    hostname: cadvisor
    restart: always
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8899:8080
#    command: "-storage_driver=influxdb -storage_driver_db=cadvisor -storage_driver_host=influxsrv:8086"  
    networks:
      - monitor

volumes:
  prometheus_data: {}
  grafana_data: {}
  alertmanager_data: {}
networks:
  monitor:
    driver: bridge





