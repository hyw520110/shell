server {
    listen 80;
    server_name 10.1.120.40;
    # 隐藏版本
    server_tokens off;
    # 禁用非必要的方法 444状态是服务器直接中断连接，不会向客户端再返回任何消息，比返回403更加暴力
    if ( $request_method !~ ^(GET|HEAD|POST)$ ) {
      return 444;
    }
    # 屏蔽常见User-Agents 验证：curl -I -A "qihoobot" locahost
    #if ( $http_user_agent ~* (qihoobot|Baiduspider|Googlebot|Googlebot-Mobile|Googlebot-Image|Mediapartners-Google|Adsbot-Google|Feedfetcher-Google|Yahoo! Slurp|Yahoo! Slurp China|YoudaoBot|Sosospider|Sogou spider|Sogou web spider|MSNBot|ia_archiver|Tomato Bot|BBBike|wget|curl|java|httpclient|okhttp|SemrushBot|python|MJ12bot|AhrefsBot|AhrefsBot|hubspot|opensiteexplorer|leiki|webmeup)) {
    #  return 403;
    #}
    # uploads|templets|data 这些目录禁止执行PHP
    location ~* ^/(uploads|templets|data)/.*.(php|php5)$ {
      return 444;
    }

    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header REMOTE-HOST $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #跨域配置
    #跨域访问代理地址的域名，*代表所有开发阶段配置,基于安全需指定具体白名单域名 
    #add_header Access-Control-Allow-Origin *; 
    #add_header Access-Control-Allow-Headers X-Requested-With;
    #允许跨域请求方式
    #add_header Access-Control-Allow-Methods 'GET,POST,OPTIONS,PUT,DELETE,OPTION';
    #add_header Access-Control-Allow-Credentials 'true';
    #add_header Access-Control-Allow-Headers 'DNT,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,token,Wecom-Cert,group,preview-user,X-Mx-ReqToken';

    client_max_body_size 1024m;
    #proxy_http_version 1.1;
    #proxy_set_header Upgrade $http_upgrade;
    #proxy_set_header Connection "upgrade";
    #允许客户端请求的最大单文件字节数
    #client_max_body_size   10M;
    #缓冲区代理缓冲用户端请求的最大字节数，
    #client_body_buffer_size   2M;
    #头信息的缓冲区大小
    #proxy_buffer_size   4k;
    #设置用于读取应答的缓冲区数目和大小，默认情况也为分页大小
    #proxy_buffers    4 32k; 
    #高负荷下缓冲大小（proxy_buffers*2）
    #proxy_busy_buffers_size   64k; 
    #设置在写入proxy_temp_path时数据的大小，预防一个工作进程在传递文件时阻塞太长
    #proxy_temp_file_write_size  64k;
    #连接超时时间/代理连接超时
    #proxy_connect_timeout 2s;
    #代理发送超时:后端服务器传完所有的数据的时间
    #proxy_send_timeout 1s;
    #后端服务器处理请求的时间
    #proxy_read_timeout 20s;

    #反向代理的重试次数
    #proxy_next_upstream_tries 12;
    #反向代理故障等待时间
    #proxy_next_upstream_timeout 8s;

    # 防止文件下载
    #location ~ \.(zip|rar|sql|bak|gz|7z)$ {
    # return 444;
    #}

}
